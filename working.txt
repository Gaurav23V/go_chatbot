package main

import (
	"context"
	"fmt"
	"log"

	"github.com/google/generative-ai-go/genai"
	"google.golang.org/api/option"
)

func main() {
	ctx := context.Background()

	// Access your API key as an environment variable
	apiKey := "AIzaSyB-tzOxeqrI-BBu3VdAe4gVDfAHPCWr-u8"
	if apiKey == "" {
		log.Fatal("API_KEY environment variable is not set")
	}

	// Create a new client for the Gemini API with the API key as an option
	client, err := genai.NewClient(ctx, option.WithAPIKey(apiKey))
	if err != nil {
		log.Fatal(err)
	}
	defer client.Close()

	// Initialize the Generative Model
	model := client.GenerativeModel("gemini-pro")

	cs := model.StartChat()
	cs.History = []*genai.Content{
		&genai.Content{
			Parts: []genai.Part{
				genai.Text("Hello, I have 2 dogs in my house."),
			},
			Role: "user",
		},
		&genai.Content{
			Parts: []genai.Part{
				genai.Text("Great to meet you. What would you like to know?"),
			},
			Role: "model",
		},
	}

	resp, err := cs.SendMessage(ctx, genai.Text("How many paws are in my house?"))
	if err != nil {
		log.Fatal(err)
	}

	// Print the response to the terminal
	// Print the response to the terminal
	fmt.Println(resp)

}
